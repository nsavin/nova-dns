#!/usr/bin/python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

#    Nova DNS 
#    Copyright (C) GridDynamics Openstack Core Team, GridDynamics
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""Starter script for Nova DNS."""

import eventlet
eventlet.monkey_patch()

import os
import sys


possible_topdir = os.path.normpath(os.path.join(os.path.abspath(
    sys.argv[0]), os.pardir, os.pardir))
if os.path.exists(os.path.join(possible_topdir, "nova", "__init__.py")):
    sys.path.insert(0, possible_topdir)

#FIXME remove in production
sys.path.append(os.pardir)

from nova import service
from nova_dns import dns, amqp 


from nova import utils
from nova import flags
from nova import log as logging

#from nova_dns import amqp

LOG = logging.getLogger("nova_dns.main")

if __name__ == '__main__':
    utils.default_flagfile()
    flags.FLAGS(sys.argv)
    FLAGS=flags.FLAGS
    log_level = "DEBUG" if FLAGS.debug or FLAGS.verbose else "INFO"
    levels=FLAGS.default_log_levels
    levels.append("nova_dns=%s" % (log_level))
    FLAGS.default_log_levels=levels
    logging.setup()
    utils.monkey_patch()
    #db_api.configure_backend()
    service.serve(dns.Service(), amqp.Service())
    service.wait()
